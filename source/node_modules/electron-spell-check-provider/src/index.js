var EventEmitter = require('events');
var SKIP_WORDS   = require('./skipWords');
var electron     = require('electron');
var util         = require('util');

var spellchecker = electron.remote.require('spellchecker');
var contextMenu  = electron.remote.require('electron-context-menu').spellcheckMenu;

function SpellCheckProvider(language) {
    EventEmitter.call(this);

    this._language = language;
    this.setLang(language);
};

util.inherits(SpellCheckProvider, EventEmitter);

SpellCheckProvider.prototype.clearSpellMenu = function () {
    contextMenu({});
};

SpellCheckProvider.prototype.addMenuItems = function (selection) {
    var prepend = [];

    try {
        if (selection.isMisspelled) {
            var list = selection.spellingSuggestions;

            for (var i = 0; i < list.length; i++) {
                prepend.push({
                    label: list[i],
                    click: function (item, win) {
                        win.webContents.replaceMisspelling(item.label);
                    }
                });
            }

            prepend.push({type: 'separator'});

            contextMenu({
                prepend: prepend
            });
        }
    } catch (e) {
        console.log(e.message);
    }
};

SpellCheckProvider.prototype.spellCheck = function (text) {
    var skipWords = SKIP_WORDS[this._language];
    var res;
    
    if (skipWords && skipWords.indexOf(text) !== -1) {
        res = true;
    } else {
        var textIsMisspelled = spellchecker.isMisspelled(text);

        if (textIsMisspelled) {
            this.emit('misspelling', spellchecker.getCorrectionsForMisspelling(text));
        }
        
        res = !textIsMisspelled;
    }

    return res;
};

SpellCheckProvider.prototype.add = function (text) {
    spellchecker.add(text);
};

SpellCheckProvider.prototype.setLang = function (lang) {
    spellchecker.setDictionary(lang.replace("-", "_"), spellchecker.getDictionaryPath());
};

module.exports = SpellCheckProvider;
